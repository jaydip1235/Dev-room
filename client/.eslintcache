[{"F:\\react-social-app\\client\\src\\index.js":"1","F:\\react-social-app\\client\\src\\App.js":"2","F:\\react-social-app\\client\\src\\reportWebVitals.js":"3","F:\\react-social-app\\client\\src\\redux\\store.js":"4","F:\\react-social-app\\client\\src\\util\\PrivateRoute.js":"5","F:\\react-social-app\\client\\src\\redux\\users\\user.actions.js":"6","F:\\react-social-app\\client\\src\\redux\\root.reducer.js":"7","F:\\react-social-app\\client\\src\\layout\\home\\Home.js":"8","F:\\react-social-app\\client\\src\\layout\\navbar\\Navbar.js":"9","F:\\react-social-app\\client\\src\\layout\\misc\\alert\\Alert.js":"10","F:\\react-social-app\\client\\src\\modules\\developers\\developer-list\\DeveloperList.js":"11","F:\\react-social-app\\client\\src\\modules\\developers\\developer-details\\DeveloperDetails.js":"12","F:\\react-social-app\\client\\src\\modules\\users\\user-register\\UserRegister.js":"13","F:\\react-social-app\\client\\src\\modules\\profiles\\edit-profile\\EditProfile.js":"14","F:\\react-social-app\\client\\src\\modules\\profiles\\dashboard\\Dashboard.js":"15","F:\\react-social-app\\client\\src\\modules\\users\\user-login\\UserLogin.js":"16","F:\\react-social-app\\client\\src\\modules\\posts\\post-details\\PostDetails.js":"17","F:\\react-social-app\\client\\src\\modules\\posts\\post-list\\PostList.js":"18","F:\\react-social-app\\client\\src\\modules\\profiles\\add-experience\\AddExperience.js":"19","F:\\react-social-app\\client\\src\\modules\\profiles\\create-profile\\CreateProfile.js":"20","F:\\react-social-app\\client\\src\\modules\\profiles\\add-education\\AddEducation.js":"21","F:\\react-social-app\\client\\src\\util\\userUtil.js":"22","F:\\react-social-app\\client\\src\\util\\authUtil.js":"23","F:\\react-social-app\\client\\src\\redux\\users\\user.reducer.js":"24","F:\\react-social-app\\client\\src\\redux\\alerts\\alert.reducer.js":"25","F:\\react-social-app\\client\\src\\redux\\profiles\\profile.reducer.js":"26","F:\\react-social-app\\client\\src\\redux\\alerts\\alert.actions.js":"27","F:\\react-social-app\\client\\src\\redux\\profiles\\profile.actions.js":"28","F:\\react-social-app\\client\\src\\redux\\developers\\developer.reducer.js":"29","F:\\react-social-app\\client\\src\\redux\\posts\\post.reducer.js":"30","F:\\react-social-app\\client\\src\\redux\\developers\\developer.actions.js":"31","F:\\react-social-app\\client\\src\\redux\\posts\\post.actions.js":"32","F:\\react-social-app\\client\\src\\layout\\misc\\spinner\\Spinner.js":"33","F:\\react-social-app\\client\\src\\layout\\misc\\Error\\Error.js":"34"},{"size":773,"mtime":1628138771868,"results":"35","hashOfConfig":"36"},{"size":2685,"mtime":1628787918591,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"36"},{"size":336,"mtime":1609860054000,"results":"39","hashOfConfig":"36"},{"size":377,"mtime":1610374508000,"results":"40","hashOfConfig":"36"},{"size":3492,"mtime":1628828602374,"results":"41","hashOfConfig":"36"},{"size":703,"mtime":1610159332000,"results":"42","hashOfConfig":"36"},{"size":1043,"mtime":1628785553425,"results":"43","hashOfConfig":"36"},{"size":3121,"mtime":1628793669600,"results":"44","hashOfConfig":"36"},{"size":1285,"mtime":1609951314000,"results":"45","hashOfConfig":"36"},{"size":5851,"mtime":1628785771234,"results":"46","hashOfConfig":"36"},{"size":10961,"mtime":1628789326511,"results":"47","hashOfConfig":"36"},{"size":5545,"mtime":1628789096303,"results":"48","hashOfConfig":"36"},{"size":13538,"mtime":1628789379486,"results":"49","hashOfConfig":"36"},{"size":10860,"mtime":1628787626945,"results":"50","hashOfConfig":"36"},{"size":4343,"mtime":1628789194270,"results":"51","hashOfConfig":"36"},{"size":10221,"mtime":1628779701478,"results":"52","hashOfConfig":"36"},{"size":11283,"mtime":1628788947939,"results":"53","hashOfConfig":"36"},{"size":7744,"mtime":1628788663340,"results":"54","hashOfConfig":"36"},{"size":10500,"mtime":1628789247533,"results":"55","hashOfConfig":"36"},{"size":7683,"mtime":1628788827997,"results":"56","hashOfConfig":"36"},{"size":191,"mtime":1610031050000,"results":"57","hashOfConfig":"36"},{"size":244,"mtime":1610031042000,"results":"58","hashOfConfig":"36"},{"size":2805,"mtime":1610032442000,"results":"59","hashOfConfig":"36"},{"size":659,"mtime":1609951022000,"results":"60","hashOfConfig":"36"},{"size":3920,"mtime":1610155486000,"results":"61","hashOfConfig":"36"},{"size":532,"mtime":1609950424000,"results":"62","hashOfConfig":"36"},{"size":7499,"mtime":1610156610000,"results":"63","hashOfConfig":"36"},{"size":1580,"mtime":1609947254000,"results":"64","hashOfConfig":"36"},{"size":5353,"mtime":1628693956042,"results":"65","hashOfConfig":"36"},{"size":1525,"mtime":1609947420000,"results":"66","hashOfConfig":"36"},{"size":7262,"mtime":1628828402193,"results":"67","hashOfConfig":"36"},{"size":329,"mtime":1609946144000,"results":"68","hashOfConfig":"36"},{"size":759,"mtime":1628788056101,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"x65750",{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"72"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"F:\\react-social-app\\client\\src\\index.js",[],["151","152"],"F:\\react-social-app\\client\\src\\App.js",["153"],"import React , {useEffect}from 'react';\nimport './App.css';\nimport {BrowserRouter as Router , Route , Switch} from 'react-router-dom';\nimport Navbar from \"./layout/navbar/Navbar\";\nimport Home from \"./layout/home/Home\";\nimport DeveloperList from \"./modules/developers/developer-list/DeveloperList\";\nimport UserRegister from \"./modules/users/user-register/UserRegister\";\nimport UserLogin from \"./modules/users/user-login/UserLogin\";\nimport DeveloperDetails from \"./modules/developers/developer-details/DeveloperDetails\";\nimport Alert from \"./layout/misc/alert/Alert\";\nimport Dashboard from \"./modules/profiles/dashboard/Dashboard\";\nimport * as userActions from './redux/users/user.actions';\nimport {useDispatch} from \"react-redux\";\nimport EditProfile from \"./modules/profiles/edit-profile/EditProfile\";\nimport CreateProfile from \"./modules/profiles/create-profile/CreateProfile\";\nimport AddExperience from \"./modules/profiles/add-experience/AddExperience\";\nimport AddEducation from \"./modules/profiles/add-education/AddEducation\";\nimport PostList from \"./modules/posts/post-list/PostList\";\nimport PostDetails from \"./modules/posts/post-details/PostDetails\";\nimport PrivateRoute from \"./util/PrivateRoute\";\nimport Error from './layout/misc/Error/Error'\nlet App = () => {\n    let dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(userActions.getUserInfo());\n    }, []);\n\n  return (\n    <React.Fragment>\n      <Router>\n          <Navbar/>\n          <Alert/>\n          <Switch>\n              <Route exact path=\"/\" component={Home}/>\n              <PrivateRoute exact path=\"/profiles/dashboard\" component={Dashboard}/>\n              <Route exact path=\"/developers\" component={DeveloperList}/>\n              <Route exact path=\"/developers/:developerId\" component={DeveloperDetails}/>\n              <Route exact path=\"/users/register\" component={UserRegister}/>\n              <Route exact path=\"/users/login\" component={UserLogin}/>\n              <PrivateRoute exact path=\"/profiles/edit-profile\" component={EditProfile}/>\n              <PrivateRoute exact path=\"/profiles/create-profile\" component={CreateProfile}/>\n              <PrivateRoute exact path=\"/profiles/edit-profile\" component={EditProfile}/>\n              <PrivateRoute exact path=\"/profiles/add-experience\" component={AddExperience}/>\n              <PrivateRoute exact path=\"/profiles/add-education\" component={AddEducation}/>\n              <PrivateRoute exact path=\"/posts/list\" component={PostList}/>\n              <PrivateRoute exact path=\"/posts/:postId\" component={PostDetails}/>\n              <Route component={Error}/>\n          </Switch>\n      </Router>\n\n    </React.Fragment>\n  );\n}\nexport default App;\n","F:\\react-social-app\\client\\src\\reportWebVitals.js",[],"F:\\react-social-app\\client\\src\\redux\\store.js",[],"F:\\react-social-app\\client\\src\\util\\PrivateRoute.js",[],"F:\\react-social-app\\client\\src\\redux\\users\\user.actions.js",[],"F:\\react-social-app\\client\\src\\redux\\root.reducer.js",[],"F:\\react-social-app\\client\\src\\layout\\home\\Home.js",[],"F:\\react-social-app\\client\\src\\layout\\navbar\\Navbar.js",[],"F:\\react-social-app\\client\\src\\layout\\misc\\alert\\Alert.js",[],"F:\\react-social-app\\client\\src\\modules\\developers\\developer-list\\DeveloperList.js",["154"],"import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport * as developerActions from '../../../redux/developers/developer.actions';\r\nimport * as developerReducer from '../../../redux/developers/developer.reducer';\r\nimport Spinner from \"../../../layout/misc/spinner/Spinner\";\r\n\r\nconst {useEffect} = require(\"react\");\r\n\r\nlet DeveloperList = () => {\r\n    let dispatch = useDispatch();\r\n\r\n    let developerInfo = useSelector((state) => {\r\n        return state[developerReducer.developerFeatureKey];\r\n    });\r\n\r\n    let {loading , profiles} = developerInfo;\r\n\r\n    useEffect(() => {\r\n        dispatch(developerActions.fetchAllDevelopers());\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <section className=\"p-3\">\r\n                <div className=\"container\">\r\n                    <div className=\"row animated zoomIn\">\r\n                        <div className=\"col\">\r\n                            <p className=\"h3 text-teal\">\r\n                               <i className=\"fa fa-user-tie\"/>{\" \"}Developers</p>\r\n                            <p>List of registered developers</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section>\r\n                {\r\n                    loading ? <Spinner/> :\r\n                        <React.Fragment>\r\n                            {\r\n                                profiles.length > 0 ?\r\n                                    <React.Fragment>\r\n                                        <div className=\"container\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col\">\r\n                                                    {\r\n                                                        profiles.map(profile => {\r\n                                                            return (\r\n                                                                <div className=\"card my-2 animated zoomIn\" key={profile._id}>\r\n                                                                    <div className=\"card-body bg-light-grey\">\r\n                                                                        <div className=\"row\">\r\n                                                                            <div className=\"col-md-2\">\r\n                                                                                <img src={profile.user.avatar} className=\"img-fluid img-thumbnail\" alt=\"\"/>\r\n                                                                            </div>\r\n                                                                            <div className=\"col-md-5\">\r\n                                                                                <h2>{profile.user.name}</h2>\r\n                                                                                <small className=\"h6\">{profile.website}</small><br/>\r\n                                                                                <small className=\"h6\">{profile.designation}</small><br/>\r\n                                                                                <small className=\"h6\">{profile.company}</small><br/>\r\n                                                                                <small>{profile.location}</small><br/>\r\n                                                                                <Link to={`/developers/${profile._id}`} className=\"btn btn-teal btn-sm\">View Profile</Link>\r\n                                                                            </div>\r\n                                                                            <div className=\"col-md-5\">\r\n                                                                                {\r\n                                                                                    profile.skills.length > 0 &&\r\n                                                                                        profile.skills.map((skill , index) => {\r\n                                                                                            return (\r\n                                                                                                <div key={index}>\r\n                                                                                                    <span className=\"badge badge-success p-2 m-1\">\r\n                                                                                                        <i className=\"fa fa-check-circle\"/> {skill}</span><br/>\r\n                                                                                                </div>\r\n                                                                                            )\r\n                                                                                        })\r\n                                                                                }\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </React.Fragment> : null\r\n                            }\r\n                        </React.Fragment>\r\n                }\r\n            </section>\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default DeveloperList;\r\n","F:\\react-social-app\\client\\src\\modules\\developers\\developer-details\\DeveloperDetails.js",["155","156","157","158","159","160"],"import React, { useEffect } from \"react\";\r\nimport { useParams, useHistory, Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as developerActions from \"../../../redux/developers/developer.actions\";\r\nimport * as developerReducer from \"../../../redux/developers/developer.reducer\";\r\nimport Spinner from \"../../../layout/misc/spinner/Spinner\";\r\nimport { ExternalLink } from 'react-external-link';\r\n\r\n\r\nlet DeveloperDetails = () => {\r\n  let dispatch = useDispatch();\r\n\r\n  let developerInfo = useSelector((state) => {\r\n    return state[developerReducer.developerFeatureKey];\r\n  });\r\n\r\n  let { loading, selectedProfile } = developerInfo;\r\n\r\n  let developerId = useParams().developerId;\r\n\r\n\r\n  function createDynamicURL()\r\n{\r\n    \r\n    var URL;\r\n    URL+=selectedProfile.social.twitter\r\n    return URL;\r\n}\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(developerActions.fetchDeveloper(developerId));\r\n  }, [developerId]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <React.Fragment>\r\n            {/* <pre>{JSON.stringify(selectedProfile)}</pre> */}\r\n          {Object.keys(selectedProfile).length > 0 && (\r\n            <React.Fragment>\r\n              <section className=\"p-3\">\r\n                <div className=\"container\">\r\n                  <div className=\"row animated zoomIn\">\r\n                    <div className=\"col\">\r\n                      <p className=\"h3 text-teal text-center\">\r\n                        <i className=\"fa fa-user-tie\" />{\" \"}\r\n                        {selectedProfile.user.name}'s Profile{\" \"}\r\n                      </p>\r\n                     \r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n              <section>\r\n                <div className=\"container bg-success text-white text-center p-3\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col\">\r\n                      <img\r\n                        src={selectedProfile.user.avatar}\r\n                        alt=\"\"\r\n                        width=\"200\"\r\n                        height=\"200\"\r\n                        className=\"rounded-circle profile-img\"\r\n                      />\r\n                      <p className=\"h2\">{selectedProfile.user.name}</p>\r\n                      <p className=\"h6\">{selectedProfile.website}</p>\r\n                      <p className=\"h6\">{selectedProfile.designation}</p>\r\n                      <p className=\"h6\">{selectedProfile.company}</p>\r\n                      <p>{selectedProfile.location}</p>\r\n                      <div className=\"d-flex flex-row justify-content-center\">\r\n                        <div className=\"p-2\">\r\n                        <ExternalLink href={selectedProfile.social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                          <i className=\"fab fa-facebook\" />\r\n                          </ExternalLink>\r\n                        </div>\r\n                        \r\n                \r\n                        <div className=\"p-2\" >\r\n                        <ExternalLink href={selectedProfile.social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <i className=\"fab fa-twitter\" />\r\n    </ExternalLink>\r\n                          \r\n                        </div>\r\n                        <div className=\"p-2\">\r\n                        <ExternalLink href={selectedProfile.social.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                          <i className=\"fab fa-linkedin\" />\r\n                          </ExternalLink>\r\n                        </div>\r\n                        <div className=\"p-2\">\r\n                        <ExternalLink href={selectedProfile.githubUserName} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                          <i className=\"fab fa-github\" />\r\n                           </ExternalLink>\r\n                        </div>\r\n                        <div className=\"p-2\">\r\n                        <ExternalLink href={selectedProfile.social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                          <i className=\"fab fa-instagram\" />\r\n                          </ExternalLink>\r\n                        </div>\r\n                        <div className=\"p-2\">\r\n                        <ExternalLink href={selectedProfile.social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                          <i className=\"fab fa-youtube\" />\r\n                          </ExternalLink>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"container \">\r\n                  <div className=\"row\">\r\n                    <div className=\"col text-center\">\r\n                      <div className=\"card my-2\">\r\n                        <div className=\"card-body bg-comment text-black\">\r\n                          <p className=\"h3\">\r\n                            {selectedProfile.user.name}'s Biography\r\n                          </p>\r\n                          <p>{selectedProfile.bio}</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col text-center\">\r\n                      <div className=\"card my-2\">\r\n                        <div className=\"card-body bg-light-grey text-teal\">\r\n                          <p className=\"h3\">\r\n                            {selectedProfile.user.name}'s Skills\r\n                          </p>\r\n                          {selectedProfile.skills.map((skill) => {\r\n                            return (\r\n                              <span className=\"badge badge-dark p-2 m-2\">\r\n                                {skill}\r\n                              </span>\r\n                            );\r\n                          })}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      {selectedProfile.experience.length > 0 ? (\r\n                        <React.Fragment>\r\n                          <div className=\"card\">\r\n                            <div className=\"card-body bg-primary text-white\">\r\n                              <p className=\"h3\">Experience</p>\r\n                              <ul className=\"list-group\">\r\n                                {selectedProfile.experience.map((exp) => {\r\n                                  return (\r\n                                    <li\r\n                                      className=\"list-group-item my-2\"\r\n                                      key={exp._id}\r\n                                    >\r\n                                      <span style={{fontWeight:\"bold\"}}>Title : {exp.title}</span>\r\n                                      <br />\r\n                                      <span style={{fontWeight:\"bold\"}}>Company : {exp.company}</span>\r\n                                      <br />\r\n                                      <span style={{fontWeight:\"bold\"}}>Location : {exp.location}</span>\r\n                                      <br />\r\n                                      <span style={{fontWeight:\"bold\"}}>From : {exp.from}</span>\r\n                                      <br />\r\n                                      <span style={{fontWeight:\"bold\"}}>\r\n                                        To :{\" \"}\r\n                                        {exp.to != \" \" ? exp.to : \"Current\"}\r\n                                      </span>\r\n                                      <br />\r\n                                      <span style={{fontWeight:\"bold\"}}>\r\n                                        Description : {exp.description}\r\n                                      </span>\r\n                                      <br />\r\n                                    </li>\r\n                                  );\r\n                                })}\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </React.Fragment>\r\n                      ) : null}\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      {selectedProfile.experience.length > 0 ? (\r\n                        <React.Fragment>\r\n                          <div className=\"card\">\r\n                            <div className=\"card-body bg-warning text-white\">\r\n                              <p className=\"h3\">Education</p>\r\n                              <ul className=\"list-group\">\r\n                                {selectedProfile.education.map((edu) => {\r\n                                  return (\r\n                                    <li\r\n                                      className=\"list-group-item my-2\"\r\n                                      key={edu._id}\r\n                                    >\r\n                                      <span style={{fontWeight:\"bold\"}}>School : {edu.school}</span>\r\n                                      <br />\r\n                                      <span style={{fontWeight:\"bold\"}}>Degree : {edu.degree}</span>\r\n                                      <br />\r\n                                      <span style={{fontWeight:\"bold\"}}>\r\n                                        Field of Study : {edu.fieldOfStudy}\r\n                                      </span>\r\n                                      <br />\r\n                                      <span style={{fontWeight:\"bold\"}}>From : {edu.from}</span>\r\n                                      <br />\r\n                                      <span style={{fontWeight:\"bold\"}}>\r\n                                        To :{\" \"}\r\n                                        {edu.to != \" \" ? edu.to : \"Current\"}\r\n                                      </span>\r\n                                      <br />\r\n                                      <span style={{fontWeight:\"bold\"}}>\r\n                                        Description : {edu.description}\r\n                                      </span>\r\n                                      <br />\r\n                                    </li>\r\n                                  );\r\n                                })}\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </React.Fragment>\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n            </React.Fragment>\r\n          )}\r\n        </React.Fragment>\r\n      )}\r\n      <div style={{ marginBottom: \"150px\" }} />\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default DeveloperDetails;\r\n","F:\\react-social-app\\client\\src\\modules\\users\\user-register\\UserRegister.js",["161","162"],"import React, {useState} from 'react';\r\nimport {Link ,useHistory} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport * as userActions from '../../../redux/users/user.actions';\r\nimport * as alertActions from '../../../redux/alerts/alert.actions';\r\n\r\nlet UserRegister = () => {\r\n    let dispatch = useDispatch();\r\n    let history = useHistory();\r\n\r\n    let [user , setUser] = useState({\r\n        name : '',\r\n        email : '',\r\n        password : ''\r\n    });\r\n\r\n    let [userError , setUserError] = useState({\r\n        nameError : '',\r\n        emailError : '',\r\n        passwordError : ''\r\n    });\r\n\r\n    let validateUsername = (event) => {\r\n        setUser({...user , name : event.target.value});\r\n        let regExp = /^[a-zA-Z0-9]/;\r\n        !regExp.test(event.target.value) ?\r\n            setUserError({...userError , nameError: 'Enter a proper Username'})\r\n            : setUserError({...userError , nameError: ''});\r\n    }\r\n\r\n    let validateEmail = (event) => {\r\n        setUser({...user , email : event.target.value});\r\n        let regExp = /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        !regExp.test(event.target.value) || event.target.value.trim()==\"\" ?\r\n            setUserError({...userError , emailError: 'Enter a proper Email'})\r\n            : setUserError({...userError , emailError: ''});\r\n    }\r\n\r\n    let validatePassword = (event) => {\r\n        setUser({...user , password : event.target.value});\r\n        if(event.target.value.trim()==\"\")\r\n            setUserError({...userError , passwordError: 'Enter a proper Password'})\r\n         else setUserError({...userError , passwordError: ''});\r\n    }\r\n\r\n    let submitRegistration = (event) => {\r\n        event.preventDefault();\r\n        if(user.name.trim() !== '' && user.email.trim() !== '' && user.password.trim() !== ''){\r\n            dispatch(userActions.registerUser(user , history));\r\n            console.log(user);\r\n        }\r\n        else{\r\n            dispatch(alertActions.setAlert('Please fill in all the fields' , 'danger'));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {/* <pre>{JSON.stringify(userError)}</pre> */}\r\n            <section className=\"p-3\">\r\n                <div className=\"container\">\r\n                    <div className=\"row animated zoomIn\">\r\n                        <div className=\"col\">\r\n                            <p className=\"h3 text-teal\">\r\n                               <i className=\"fa fa-user-shield\"/> Registration</p>\r\n                            <p>Register to Dev-room</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section>\r\n                <div className=\"container\">\r\n                    <div className=\"row animated zoomIn\">\r\n                        <div className=\"col-md-8\">\r\n                            <form onSubmit={submitRegistration}>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                    required\r\n                                        name=\"name\"\r\n                                        value={user.name}\r\n                                        onChange={validateUsername}\r\n                                        type=\"text\" className={`form-control ${userError.nameError.length > 0 ? 'is-invalid' : ''}`} placeholder=\"Name\"/>\r\n                                    {userError.nameError.length > 0 ? <small className=\"text-danger\">{userError.nameError}</small> : ''}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                    required\r\n                                        name=\"email\"\r\n                                        value={user.email}\r\n                                        onChange={validateEmail}\r\n                                        type=\"email\" className={`form-control ${userError.emailError.length > 0 ? 'is-invalid' : ''}`} placeholder=\"Email\"/>\r\n                                    {userError.emailError.length > 0 ? <small className=\"text-danger\">{userError.emailError}</small> : ''}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                    required\r\n                                        name=\"password\"\r\n                                        value={user.password}\r\n                                        onChange={validatePassword}\r\n                                        type=\"password\" className={`form-control ${userError.passwordError.length > 0 ? 'is-invalid' : ''}`} placeholder=\"Password\"/>\r\n                                    {userError.passwordError.length > 0 ? <small className=\"text-danger\">{userError.passwordError}</small> : ''}\r\n                                </div>\r\n                                <div>\r\n                                    <input type=\"submit\" className=\"btn btn-teal btn-sm\" value=\"Register\"/>\r\n                                </div>\r\n                            </form>\r\n                            <small>Already have an account ?\r\n                                <Link to=\"/users/login\" className=\"font-weight-bold text-teal\"> Login</Link>\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default UserRegister;\r\n","F:\\react-social-app\\client\\src\\modules\\profiles\\edit-profile\\EditProfile.js",["163","164"],"import React, {useState, useEffect} from 'react';\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport * as profileActions from '../../../redux/profiles/profile.actions';\r\nimport * as profileReducer from '../../../redux/profiles/profile.reducer';\r\nimport * as userReducer from '../../../redux/users/user.reducer';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Spinner from \"../../../layout/misc/spinner/Spinner\";\r\n\r\n\r\nlet EditProfile = () => {\r\n    let dispatch = useDispatch();\r\n    let history = useHistory();\r\n\r\n    let [localProfile , setLocalProfile] = useState({\r\n        image:'',\r\n        company : '',\r\n        website : '',\r\n        location : '',\r\n        designation : '',\r\n        skills : '',\r\n        bio : '',\r\n        githubUserName : '',\r\n        youtube : '',\r\n        facebook : '',\r\n        twitter : '',\r\n        linkedin : '',\r\n        instagram : ''\r\n    });\r\n\r\n\r\n    let profileInfo = useSelector((state) => {\r\n        return state[profileReducer.profileFeatureKey];\r\n    });\r\n\r\n    let userInfo = useSelector((state) => {\r\n        return state[userReducer.usersFeatureKey];\r\n    });\r\n\r\n    let {user} = userInfo;\r\n\r\nconst uploadImage=async(e)=>{\r\n    const file=e.target.files[0];\r\n    const base64=await convertBase64(file);\r\n    setLocalProfile({\r\n        ...localProfile,\r\n        image : base64.toString()\r\n    });\r\n  }\r\n  \r\n  const convertBase64=(file)=>{\r\n    return new Promise((resolve,reject)=>{\r\n      const fileReader=new FileReader();\r\n      fileReader.readAsDataURL(file);\r\n      fileReader.onload=()=>{\r\n        resolve(fileReader.result);\r\n      }\r\n      \r\n      fileReader.onerror=(err)=>{\r\n        reject(err);\r\n      }\r\n    })\r\n  }\r\n\r\n    let {loading , profile} = profileInfo;\r\n\r\n    useEffect(() => {\r\n        dispatch(profileActions.getProfile());\r\n        setLocalProfile({\r\n            image : user.avatar,\r\n            company: profile.company ? profile.company : '',\r\n            location: profile.location ? profile.location : '',\r\n            designation: profile.designation ? profile.designation : '',\r\n            website: profile.website ? profile.website : '',\r\n            githubUserName: profile.githubUserName ? profile.githubUserName : '',\r\n            skills: profile.skills ? profile.skills : '',\r\n            bio: profile.bio ? profile.bio : '',\r\n            youtube : profile && profile.social?.youtube ? profile.social.youtube : '',\r\n            twitter : profile && profile.social?.twitter ? profile.social.twitter : '',\r\n            facebook : profile && profile.social?.facebook ? profile.social.facebook : '',\r\n            instagram : profile && profile.social?.instagram ? profile.social.instagram : '',\r\n            linkedin : profile && profile.social?.linkedin ? profile.social.linkedin : '',\r\n        });\r\n    }, []);\r\n\r\n    let updateInput = (event) => {\r\n        setLocalProfile({\r\n            ...localProfile,\r\n            [event.target.name] : event.target.value\r\n        });\r\n    };\r\n\r\n    let submitUpdateProfile = (event) => {\r\n        event.preventDefault();\r\n        dispatch(profileActions.updateProfile(localProfile , history));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {/* <pre>{JSON.stringify(profile.user)}</pre> */}\r\n            <section className=\"p-3\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <p className=\"h3 text-teal\">\r\n                                <i className=\"fa fa-user-cog\"/>\r\n                               {\" \"} Edit Profile\r\n                            </p>\r\n                            <p>Edit your profile!</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {\r\n                loading ? <Spinner/> :\r\n                    <React.Fragment>\r\n                       {/* <pre>{JSON.stringify(localProfile)}</pre>*/}\r\n                        <section>\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-8\">\r\n                                        <form onSubmit={submitUpdateProfile}>\r\n                                        <div className=\"col-md-5 border-right\">\r\n              <div className=\"d-flex flex-column align-items-center text-center p-3 py-5\">\r\n                  \r\n                  <img className=\"rounded mt-5\"\r\n               src={localProfile.image} \r\n               \r\n               style={{width:\"80%\"}}/>\r\n               \r\n               <span className=\"font-weight-bold\">Upload Profile Photo</span><input type=\"file\" className=\"text-center form-control\" onChange={(e)=>{uploadImage(e)}}/></div>\r\n            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <input\r\n                                                     \r\n                                                    name=\"company\"\r\n                                                    value={localProfile.company}\r\n                                                    onChange={updateInput}\r\n                                                    type=\"text\" className=\"form-control\" placeholder=\"Company\"/>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <input\r\n                                                     \r\n                                                    name=\"website\"\r\n                                                    value={localProfile.website}\r\n                                                    onChange={updateInput}\r\n                                                    type=\"text\" className=\"form-control\" placeholder=\"Website\"/>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <input\r\n                                                     \r\n                                                    name=\"location\"\r\n                                                    value={localProfile.location}\r\n                                                    onChange={updateInput}\r\n                                                    type=\"text\" className=\"form-control\" placeholder=\"Location\"/>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <select\r\n                                                     \r\n                                                    name=\"designation\"\r\n                                                    value={localProfile.designation}\r\n                                                    onChange={updateInput}\r\n                                                    className=\"form-control\">\r\n                                                    <option value=\"\">Select Designation</option>\r\n                                                    <option value=\"Junior Developer\">Junior Developer</option>\r\n                                                    <option value=\"Senior Developer\">Senior Developer</option>\r\n                                                    <option value=\"Tech Lead\">Tech Lead</option>\r\n                                                    <option value=\"Junior Manager\">Junior Manager</option>\r\n                                                    <option value=\"Senior Manager\">Senior Manager</option>\r\n                                                    <option value=\"Director\">Director</option>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <input\r\n                                                     \r\n                                                    name=\"skills\"\r\n                                                    value={localProfile.skills}\r\n                                                    onChange={updateInput}\r\n                                                    type=\"text\" className=\"form-control\" placeholder=\"Skills\"/>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <textarea\r\n                                                     \r\n                                                    name=\"bio\"\r\n                                                    value={localProfile.bio}\r\n                                                    onChange={updateInput}\r\n                                                    rows=\"3\" className=\"form-control\" placeholder=\"Job Description\"/>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <input\r\n                                                     \r\n                                                    name=\"githubUserName\"\r\n                                                    value={localProfile.githubUserName}\r\n                                                    onChange={updateInput}\r\n                                                    type=\"text\" className=\"form-control\" placeholder=\"Github Link (start with https://)\"/>\r\n                                            </div>\r\n                                            <hr/>\r\n                                            <small>Social Links</small>\r\n                                            <div className=\"form-group\">\r\n                                                <input\r\n                                                     \r\n                                                    name=\"youtube\"\r\n                                                    value={localProfile.youtube}\r\n                                                    onChange={updateInput}\r\n                                                    type=\"text\" className=\"form-control\" placeholder=\"YouTube link (start with https://)\"/>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <input\r\n                                                     \r\n                                                    name=\"twitter\"\r\n                                                    value={localProfile.twitter}\r\n                                                    onChange={updateInput}\r\n                                                    type=\"text\" className=\"form-control\" placeholder=\"Twitter link (start with https://)\"/>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <input\r\n                                                     \r\n                                                    name=\"facebook\"\r\n                                                    value={localProfile.facebook}\r\n                                                    onChange={updateInput}\r\n                                                    type=\"text\" className=\"form-control\" placeholder=\"Facebook link (start with https://)\"/>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <input\r\n                                                     \r\n                                                    name=\"linkedin\"\r\n                                                    value={localProfile.linkedin}\r\n                                                    onChange={updateInput}\r\n                                                    type=\"text\" className=\"form-control\" placeholder=\"LinkedIn link (start with https://)\"/>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <input\r\n                                                     \r\n                                                    name=\"instagram\"\r\n                                                    value={localProfile.instagram}\r\n                                                    onChange={updateInput}\r\n                                                    type=\"text\" className=\"form-control\" placeholder=\"Instagram link (start with https://)\"/>\r\n                                            </div>\r\n                                            <div>\r\n                                                <input type=\"submit\" className=\"btn btn-teal btn-sm\" value=\"Update\"/>\r\n                                                <Link to=\"/profiles/dashboard\" className=\"btn bg-light-grey btn-sm\">Back</Link>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n                    </React.Fragment>\r\n            }\r\n            <div style={{marginBottom : '150px'}}/>\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default EditProfile;\r\n","F:\\react-social-app\\client\\src\\modules\\profiles\\dashboard\\Dashboard.js",["165","166","167"],"import React, {useEffect} from 'react';\r\nimport * as userReducer from '../../../redux/users/user.reducer';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Spinner from \"../../../layout/misc/spinner/Spinner\";\r\nimport * as profileActions from '../../../redux/profiles/profile.actions';\r\nimport * as profileReducer from '../../../redux/profiles/profile.reducer';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nlet Dashboard = () => {\r\n    let dispatch = useDispatch();\r\n\r\n    let userInfo = useSelector((state) => {\r\n        return state[userReducer.usersFeatureKey];\r\n    });\r\n\r\n    let profileInfo = useSelector((state) => {\r\n        return state[profileReducer.profileFeatureKey];\r\n    });\r\n\r\n    let {profile, loading} = profileInfo;\r\n\r\n    useEffect(() => {\r\n        dispatch(profileActions.getProfile());\r\n    }, []);\r\n\r\n    let {user} = userInfo;\r\n\r\n    let clickDeleteExperience = (experienceId) => {\r\n        dispatch(profileActions.deleteExperience(experienceId));\r\n    };\r\n\r\n    let clickDeleteEducation = (educationId) => {\r\n        dispatch(profileActions.deleteEducation(educationId));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                loading ? <Spinner/> :\r\n                    <React.Fragment>\r\n                        <section className=\"p-3\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <p className=\"h3 text-teal\">\r\n                                            <i className=\"fa fa-sitemap\"/>\r\n                                            Dashboard\r\n                                        </p>\r\n                                        {\r\n                                            Object.keys(user).length > 0 &&\r\n                                            <p className=\"h5\">Welcome {user.name}</p>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n                    </React.Fragment>\r\n            }\r\n            {\r\n                Object.keys(profile).length > 0 ?\r\n                    <React.Fragment>\r\n                        <section>\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <Link to=\"/profiles/edit-profile\" className=\"btn btn-primary text-white btn-sm\">\r\n                                           <i className=\"fa fa-user-cog\"/> Edit Profile</Link>\r\n                                        <Link to=\"/profiles/add-experience\" className=\"btn btn-success text-white btn-sm\">\r\n                                            <i className=\"fa fa-user-tie\"/> Add Experience</Link>\r\n                                        <Link to=\"/profiles/add-education\" className=\"btn btn-info text-white btn-sm\">\r\n                                            <i className=\"fa fa-graduation-cap\"/> Add Education</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n                        {/* Experience Details */}\r\n                        <section>\r\n                            {\r\n                                profile.experience.length > 0 &&\r\n                                <div className=\"container \">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">\r\n                                            <p className=\"h3 text-teal\">Experience Details</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">\r\n                                            <div className=\"table-responsive\">\r\n                                            <table className=\"table table-bordered table-hover text-center table-light table-striped \">\r\n                                                <thead className=\"thead-dark text-secondary\">\r\n                                                <tr>\r\n                                                    <th>Title</th>\r\n                                                    <th>Company</th>\r\n                                                    <th>Location</th>\r\n                                                    <th>From</th>\r\n                                                    <th>To</th>\r\n                                                    <th>Action</th>\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                {\r\n                                                    profile.experience.map(exp => {\r\n                                                        return (\r\n                                                            <tr key={exp._id}>\r\n                                                                <td>{exp.title}</td>\r\n                                                                <td>{exp.company}</td>\r\n                                                                <td>{exp.location}</td>\r\n                                                                <td>{exp.from}</td>\r\n                                                                <td>{exp.to!=\" \" ? exp.to : \"Current\"}</td>\r\n                                                                <td>\r\n                                                                    <button onClick={clickDeleteExperience.bind(this, exp._id)} className=\"btn btn-danger btn-sm\">Delete</button>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                                </tbody>\r\n                                            </table>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </section>\r\n                        {/* Education Details */}\r\n                        <section>\r\n                            {\r\n                                profile.education.length > 0 &&\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">\r\n                                            <p className=\"h3 text-teal\">Education Details</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">\r\n                                            <div className=\"table-responsive\">\r\n                                            <table className=\"table table-hover  table-bordered text-center table-light table-striped\">\r\n                                            {/* <table classname=\"table-responsive-lg\"> */}\r\n                                                <thead className=\"thead-dark text-white\">\r\n                                                <tr>\r\n                                                    <th>School</th>\r\n                                                    <th>Degree</th>\r\n                                                    <th>Field Of Study</th>\r\n                                                    <th>From</th>\r\n                                                    <th>To</th>\r\n                                                    <th>Action</th>\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                {\r\n                                                    profile.education.map(edu => {\r\n                                                        return (\r\n                                                            <tr key={edu._id}>\r\n                                                                <td>{edu.school}</td>\r\n                                                                <td>{edu.degree}</td>\r\n                                                                <td>{edu.fieldOfStudy}</td>\r\n                                                                <td>{edu.from}</td>\r\n                                                                <td>{edu.to!=\" \" ? edu.to : \"Current\"}</td>\r\n                                                                <td>\r\n                                                                    <button onClick={clickDeleteEducation.bind(this, edu._id)} className=\"btn btn-danger btn-sm\">Delete</button>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                                </tbody>\r\n                                            </table>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </section>\r\n                    </React.Fragment> :\r\n                    <React.Fragment>\r\n                        <section>\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <small>You don't have a profile yet! , please create one.</small><br/>\r\n                                        <Link to=\"/profiles/create-profile\" className=\"btn btn-secondary text-white btn-sm\">\r\n                                            <i className=\"fa fa-user-cog\"/> Create Profile</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n                    </React.Fragment>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default Dashboard;\r\n","F:\\react-social-app\\client\\src\\modules\\users\\user-login\\UserLogin.js",["168"],"import React, {useState} from 'react';\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport * as userActions from \"../../../redux/users/user.actions\";\r\nimport * as alertActions from '../../../redux/alerts/alert.actions';\r\n\r\nlet UserLogin = () => {\r\n    let dispatch = useDispatch();\r\n    let history = useHistory();\r\n\r\n    let [user , setUser] = useState({\r\n        email : '',\r\n        password : ''\r\n    });\r\n\r\n    let [userError , setUserError] = useState({\r\n        emailError : '',\r\n        passwordError : ''\r\n    });\r\n\r\n    let validateEmail = (event) => {\r\n        setUser({...user , email : event.target.value});\r\n        let regExp = /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        !regExp.test(event.target.value) ?\r\n            setUserError({...userError , emailError: 'Enter a proper Email'})\r\n            : setUserError({...userError , emailError: ''});\r\n    }\r\n\r\n    let validatePassword = (event) => {\r\n        setUser({...user , password : event.target.value});\r\n        if(event.target.value.trim()==\"\")\r\n            setUserError({...userError , passwordError: 'Enter a proper Password'})\r\n         else setUserError({...userError , passwordError: ''});\r\n    }\r\n    let submitLogin = (event) => {\r\n        event.preventDefault();\r\n        if(user.email !== '' && user.password !== ''){\r\n            dispatch(userActions.loginUser(user , history));\r\n            console.log(user);\r\n        }\r\n        else{\r\n            dispatch(alertActions.setAlert('Please fill in  the fields' , 'danger'));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <section className=\"p-3\">\r\n                <div className=\"container\">\r\n                    <div className=\"row animated zoomIn\">\r\n                        <div className=\"col\">\r\n                            <p className=\"h3 text-teal\">\r\n                                <i className=\"fa fa-sign-in-alt\"/> Login</p>\r\n                            <p>Login into Dev-room</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 animated zoomIn\">\r\n                            <form onSubmit={submitLogin}>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        name=\"email\"\r\n                                        required\r\n                                        value={user.email}\r\n                                        onChange={validateEmail}\r\n                                        type=\"email\" className={`form-control ${userError.emailError.length > 0 ? 'is-invalid' : ''}`} placeholder=\"Email\"/>\r\n                                    {userError.emailError.length > 0 ? <small className=\"text-danger\">{userError.emailError}</small> : ''}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        name=\"password\"\r\n                                        required\r\n                                        value={user.password}\r\n                                        onChange={validatePassword}\r\n                                        type=\"password\" className={`form-control ${userError.passwordError.length > 0 ? 'is-invalid' : ''}`} placeholder=\"Password\"/>\r\n                                    {userError.passwordError.length > 0 ? <small className=\"text-danger\">{userError.passwordError}</small> : ''}\r\n                                </div>\r\n                                <div>\r\n                                    <input type=\"submit\" className=\"btn btn-teal btn-sm\" value=\"Login\"/>\r\n                                </div>\r\n                            </form>\r\n                            <small>Don't have an account ?\r\n                                <Link to=\"/users/register\" className=\"font-weight-bold text-teal\"> Register</Link>\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default UserLogin;\r\n","F:\\react-social-app\\client\\src\\modules\\posts\\post-details\\PostDetails.js",["169"],"import React, {useEffect, useState} from 'react';\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport * as postActions from '../../../redux/posts/post.actions';\r\nimport * as postReducer from '../../../redux/posts/post.reducer';\r\nimport * as userReducer from '../../../redux/users/user.reducer';\r\nimport Spinner from \"../../../layout/misc/spinner/Spinner\";\r\n\r\nlet PostDetails = () => {\r\n    let [comment , setComment] = useState({\r\n        text : ''\r\n    });\r\n\r\n    let dispatch = useDispatch();\r\n    let postId = useParams().postId;\r\n\r\n    let postInfo = useSelector((state) => {\r\n        return state[postReducer.postsFeatureKey];\r\n    });\r\n\r\n    let userInfo = useSelector((state) => {\r\n        return state[userReducer.usersFeatureKey];\r\n    });\r\n\r\n    let {user} = userInfo;\r\n\r\n    let {loading , selectedPost} = postInfo;\r\n\r\n       \r\nfunction timeDifference(current, previous) {\r\n\r\n    var msPerMinute = 60 * 1000;\r\n    var msPerHour = msPerMinute * 60;\r\n    var msPerDay = msPerHour * 24;\r\n    var msPerMonth = msPerDay * 30;\r\n    var msPerYear = msPerDay * 365;\r\n\r\n    var elapsed = current - previous;\r\n\r\n    if (elapsed < msPerMinute) {\r\n        if(elapsed/1000 < 30) return \"Just now\";\r\n        \r\n        return Math.round(elapsed/1000) + ' seconds ago';   \r\n    }\r\n\r\n    else if (elapsed < msPerHour) {\r\n         return Math.round(elapsed/msPerMinute) + ' minutes ago';   \r\n    }\r\n\r\n    else if (elapsed < msPerDay ) {\r\n         return Math.round(elapsed/msPerHour ) + ' hours ago';   \r\n    }\r\n\r\n    else if (elapsed < msPerMonth) {\r\n        return Math.round(elapsed/msPerDay) + ' days ago';   \r\n    }\r\n\r\n    else if (elapsed < msPerYear) {\r\n        return Math.round(elapsed/msPerMonth) + ' months ago';   \r\n    }\r\n\r\n    else {\r\n        return Math.round(elapsed/msPerYear ) + ' years ago';   \r\n    }\r\n}\r\n\r\n    useEffect(() => {\r\n        dispatch(postActions.getPost(postId));\r\n    }, [postId]);\r\n\r\n    let submitCreateComment = (e) => {\r\n        e.preventDefault();\r\n        dispatch(postActions.createComment(comment , postId));\r\n        setComment({\r\n            text : ''\r\n        });\r\n    };\r\n\r\n    let clickDeleteComment = (commentId) => {\r\n       dispatch(postActions.deleteComment(postId , commentId));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                loading ? <Spinner/> :\r\n                    <React.Fragment>\r\n                        <section className=\"p-3\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <Link to=\"/posts/list\" className=\"btn bg-light-grey btn-sm\">back</Link>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        {\r\n                                            Object.keys(selectedPost).length > 0 &&\r\n                                            <div className=\"card\">\r\n                                                <div className=\"card-body bg-light-grey\">\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-md-2 text-center\">\r\n                                                            <img src={selectedPost.avatar} alt=\"\" className=\"rounded-circle\" width=\"60\" height=\"60\"/><br/>\r\n                                                            <small>{selectedPost.name}</small>\r\n                                                        </div>\r\n                                                        <div className=\"col-md-8\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-md-6\">\r\n                                                                    <img src={selectedPost.image} alt=\"\" className=\"img-fluid d-block m-auto\"/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <p style={{fontWeight: \"bold\"}}>{selectedPost.text}</p>\r\n                                                            <small>{timeDifference(new Date(), new Date(selectedPost.createdAt))}</small>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"row mt-3\">\r\n                                                        <div className=\"col\">\r\n                                                            <form onSubmit={submitCreateComment}>\r\n                                                                <div className=\"input-group mb-1\">\r\n                                                                    <div className=\"input-group-prepend\">\r\n                                                                        <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                                                                            <img src={user.avatar} alt=\"\" width=\"50\" height=\"50\" className=\"rounded-circle\"/>\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                    <textarea\r\n                                                                        required\r\n                                                                        name=\"text\"\r\n                                                                        value={comment.text}\r\n                                                                        onChange={e => setComment({text : e.target.value})}\r\n\r\n                                                                        rows=\"3\" className=\"form-control\" placeholder=\"Whats on your mind..\"\r\n                                                                        style={{height:\"100px\", width:\"100px\",resize: \"none\"}}/>\r\n                                                                        \r\n                                                                </div>\r\n                                                                <div>\r\n                                                                    <input type=\"submit\" className=\"btn btn-teal btn-sm\" value=\"Comment\"/>\r\n                                                                </div>\r\n                                                            </form>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n\r\n                        <section>\r\n                            { Object.keys(selectedPost).length > 0 &&\r\n                                selectedPost.comments.length > 0 &&\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">\r\n                                            {\r\n                                                selectedPost.comments.map(comment => {\r\n                                                    return (\r\n                                                        <div className=\"card mt-3\" key={comment._id}>\r\n                                                            <div className=\"card-body bg-comment\">\r\n                                                                <div className=\"row\">\r\n                                                                    <div className=\"col-md-2\">\r\n                                                                        <img src={comment.avatar} alt=\"\" className=\"rounded-circle\" width=\"50\" height=\"50\"/>\r\n                                                                        <br/>\r\n                                                                        <small>{comment.name}</small>\r\n                                                                    </div>\r\n                                                                    <div className=\"col-md-8\">\r\n                                                                        <p style={{fontWeight : \"bold\"}}>{comment.text}</p>\r\n                                                                        {\r\n                                                                            comment.user === user._id ?\r\n                                                                                <button className=\"btn btn-danger btn-sm\" onClick={clickDeleteComment.bind(this,comment._id)}>\r\n                                                                                    <i className=\"fa fa-times-circle\"/>\r\n                                                                                </button> : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </section>\r\n                    </React.Fragment>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default PostDetails;\r\n","F:\\react-social-app\\client\\src\\modules\\posts\\post-list\\PostList.js",["170","171","172","173"],"import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Link} from 'react-router-dom';\r\nimport * as userReducer from '../../../redux/users/user.reducer';\r\nimport * as userAction from '../../../redux/users/user.actions';\r\nimport * as postActions from '../../../redux/posts/post.actions';\r\nimport * as postReducer from '../../../redux/posts/post.reducer';\r\nimport Spinner from \"../../../layout/misc/spinner/Spinner\";\r\nimport { text } from 'body-parser';\r\n\r\nlet PostList = () => {\r\n    let [localPost , setLocalPost] = useState({\r\n        text : '',\r\n        image : '',\r\n\r\n    });\r\n\r\n    let dispatch = useDispatch();\r\n\r\n    let userInfo = useSelector((state) => {\r\n        return state[userReducer.usersFeatureKey];\r\n    });\r\n\r\n    let {user} = userInfo;\r\n\r\n    let postInfo = useSelector((state) => {\r\n        return state[postReducer.postsFeatureKey];\r\n    });\r\n\r\n    \r\nfunction timeDifference(current, previous) {\r\n\r\n    var msPerMinute = 60 * 1000;\r\n    var msPerHour = msPerMinute * 60;\r\n    var msPerDay = msPerHour * 24;\r\n    var msPerMonth = msPerDay * 30;\r\n    var msPerYear = msPerDay * 365;\r\n\r\n    var elapsed = current - previous;\r\n\r\n    if (elapsed < msPerMinute) {\r\n        if(elapsed/1000 < 30) return \"Just now\";\r\n        \r\n        return Math.round(elapsed/1000) + ' seconds ago';   \r\n    }\r\n\r\n    else if (elapsed < msPerHour) {\r\n         return Math.round(elapsed/msPerMinute) + ' minutes ago';   \r\n    }\r\n\r\n    else if (elapsed < msPerDay ) {\r\n         return Math.round(elapsed/msPerHour ) + ' hours ago';   \r\n    }\r\n\r\n    else if (elapsed < msPerMonth) {\r\n        return Math.round(elapsed/msPerDay) + ' days ago';   \r\n    }\r\n\r\n    else if (elapsed < msPerYear) {\r\n        return Math.round(elapsed/msPerMonth) + ' months ago';   \r\n    }\r\n\r\n    else {\r\n        return Math.round(elapsed/msPerYear ) + ' years ago';   \r\n    }\r\n}\r\n\r\n    let {loading , posts} = postInfo;\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(postActions.getAllPosts());\r\n    }, []);\r\n\r\n    let updateInput = (e) => {\r\n        setLocalPost({\r\n            ...localPost,\r\n            [e.target.name] : e.target.value\r\n        });\r\n    };\r\n\r\n    let submitCreatePost = (e) => {\r\n        e.preventDefault();\r\n        if(localPost.text.trim()!=='')\r\n        dispatch(postActions.createPost(localPost));\r\n      \r\n        setLocalPost({\r\n            text : '',\r\n            image: ''\r\n        });\r\n    };\r\n\r\n    let clickDeletePost = (postId) => {\r\n        dispatch(postActions.deletePost(postId));\r\n    };\r\n\r\n    let clickLikePost = (postId) => {\r\n        dispatch(postActions.likePost(postId));\r\n        \r\n\r\n    };\r\n\r\n    let clickUnLikePost = (postId) => {\r\n        dispatch(postActions.unlikePost(postId));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n           {/* { <pre>{JSON.stringify(posts)}</pre> } */}\r\n        \r\n            <section className=\"p-3\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <p className=\"h3 text-teal\">\r\n                                Welcome to Dev-Room Posts\r\n                            </p>\r\n                            <p>Post your achievements, suceess and needs and share with other developers!</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {\r\n                            Object.keys(user).length > 0 &&\r\n                            <div className=\"col-md-8\">\r\n                                <form onSubmit={submitCreatePost}>\r\n                                    <div className=\"input-group mb-1\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                                            <img src={user.avatar} alt=\"\" width=\"50\" height=\"50\" className=\"rounded-circle\"/>\r\n                                        </span>\r\n                                        </div>\r\n                                        <textarea\r\n                                            required\r\n                                            name=\"text\"\r\n                                            value={localPost.text}\r\n                                            onChange={updateInput}\r\n                                            rows=\"3\" className=\"form-control\" placeholder=\"Whats on your mind..\"\r\n                                            style={{height:\"100px\", width:\"100px\",resize: \"none\"}}/>\r\n                                    </div>\r\n                                    <div className=\"input-group mb-1\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                                            Image Url\r\n                                        </span>\r\n                                        </div>\r\n                                        <input\r\n                                            name=\"image\"\r\n                                            value={localPost.image}\r\n                                            onChange={updateInput}\r\n                                            type=\"text\" className=\"form-control\" placeholder=\"Image Url\"/>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"submit\" className=\"btn btn-teal btn-sm\" value=\"Post\"/>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <hr/>\r\n                </div>\r\n            </section>\r\n            <section>\r\n                {\r\n                    loading ? <Spinner/> :\r\n                        <React.Fragment>\r\n                            {\r\n                                posts.length > 0 &&\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">\r\n                                            {\r\n                                               posts.slice(0).reverse().map(post => {\r\n                                                    return (\r\n                                                        <div className=\"card my-2\" key={post._id}>\r\n                                                            <div className=\"card-body bg-light-grey\">\r\n                                                                <div className=\"row\">\r\n                                                                    <div className=\"col-md-2\">\r\n                                                                        <img src={post.user.avatar} alt=\"\" className=\"rounded-circle\" width=\"50\" height=\"50\"/><br/>\r\n                                                                        <small>{post.name}</small>\r\n                                                                    </div>\r\n                                                                    <div className=\"col-md-8\">\r\n                                                                        <div className=\"row\">\r\n                                                                            <div className=\"col-md-6\">\r\n                                                                                <img src={post.image} alt=\"\" className=\"img-fluid d-block m-auto\"/>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <p style={{fontWeight : \"bold\"}}>{post.text}</p>\r\n                                                                        <small>{timeDifference(new Date(), new Date(post.createdAt))}</small><br/>\r\n                                                                        {\r\n                                                                            \r\n                                                                            post.likes.includes(user._id)?\r\n                                                                \r\n                                                                            <button className=\"btn btn-like btn-sm\" onClick={clickLikePost.bind(this,post._id)} \r\n                                                                            style={{color: 'white'}}>\r\n                                                                            <i className=\"fa fa-thumbs-up\" style={{color:\"white\"}}/> {post.likes.length}\r\n                                                                            \r\n                                                                        </button>:\r\n                                                                        <button className=\"btn btn-primary btn-sm\" onClick={clickLikePost.bind(this,post._id)}>\r\n                                                                        <i className=\"fa fa-thumbs-up\"/> {post.likes.length}\r\n                                                                    </button>\r\n                                                                    \r\n                                                                        }\r\n                                                    \r\n                                                                        <Link to={`/posts/${post._id}`} className=\"btn btn-warning btn-sm\">\r\n                                                                            <i className=\"fab fa-facebook-messenger\"/> Discussions {post.comments.length}\r\n                                                                        </Link>\r\n                                                                        {\r\n                                                                            post.user._id === user._id ?\r\n                                                                            <button className=\"btn btn-danger btn-sm\" onClick={clickDeletePost.bind(this,post._id)}>\r\n                                                                                <i className=\"fa fa-times-circle\"/>\r\n                                                                            </button> : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </React.Fragment>\r\n                }\r\n            </section>\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default PostList;\r\n","F:\\react-social-app\\client\\src\\modules\\profiles\\add-experience\\AddExperience.js",[],"F:\\react-social-app\\client\\src\\modules\\profiles\\create-profile\\CreateProfile.js",["174","175"],"import React, {useState} from 'react';\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\nimport * as profileActions from '../../../redux/profiles/profile.actions';\r\nimport * as userReducer from '../../../redux/users/user.reducer';\r\n\r\nlet CreateProfile = () => {\r\n    let dispatch = useDispatch();\r\n    let history = useHistory();\r\n\r\n    let [profile , setProfile] = useState({\r\n        image: '',\r\n        company : '',\r\n        website : '',\r\n        location : '',\r\n        designation : '',\r\n        skills : '',\r\n        bio : '',\r\n        githubUserName : '',\r\n        youtube : '',\r\n        facebook : '',\r\n        twitter : '',\r\n        linkedin : '',\r\n        instagram : ''\r\n    });\r\n\r\n    \r\n    let userInfo = useSelector((state) => {\r\n        return state[userReducer.usersFeatureKey];\r\n    });\r\n\r\n    let {user} = userInfo;\r\n\r\n    const uploadImage=async(e)=>{\r\n        const file=e.target.files[0];\r\n        const base64=await convertBase64(file);\r\n        setProfile({\r\n            ...profile,\r\n            image : base64.toString()\r\n        });\r\n      }\r\n      \r\n      const convertBase64=(file)=>{\r\n        return new Promise((resolve,reject)=>{\r\n          const fileReader=new FileReader();\r\n          fileReader.readAsDataURL(file);\r\n          fileReader.onload=()=>{\r\n            resolve(fileReader.result);\r\n          }\r\n          \r\n          fileReader.onerror=(err)=>{\r\n            reject(err);\r\n          }\r\n        })\r\n      }\r\n\r\n    let updateInput = (e) => {\r\n        setProfile({\r\n            ...profile,\r\n            [e.target.name] : e.target.value\r\n        });\r\n    };\r\n\r\n    let submitCreateProfile = (e) => {\r\n        e.preventDefault();\r\n        dispatch(profileActions.createProfile(profile , history));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n           {/* <pre>{JSON.stringify(profile)}</pre>*/}\r\n            <section className=\"p-3\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <p className=\"h3 text-teal\">\r\n                                <i className=\"fa fa-user-circle\"/>\r\n                                {' '} Create a Profile\r\n                            </p>\r\n                            <p>Welcome! Create your profile</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8\">\r\n                            <form onSubmit={submitCreateProfile}>\r\n                            <div className=\"col-md-5 border-right\">\r\n              <div className=\"d-flex flex-column align-items-center text-center p-3 py-5\">\r\n                  \r\n                  <img className=\"rounded mt-5\"\r\n               src={profile.image} \r\n               \r\n               style={{width:\"80%\"}}/>\r\n               \r\n               <span className=\"font-weight-bold\">Upload Profile Photo</span><input type=\"file\" className=\"text-center form-control\" onChange={(e)=>{uploadImage(e)}}/></div>\r\n            </div>\r\n                                \r\n                                <div className=\"form-group\">\r\n                                    \r\n                                    <input\r\n                                \r\n                                        name=\"company\"\r\n                                        value={profile.company}\r\n                                        onChange={updateInput}\r\n                                        type=\"text\" className=\"form-control\" placeholder=\"Company\"/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                            \r\n                                        name=\"website\"\r\n                                        value={profile.website}\r\n                                        onChange={updateInput}\r\n                                        type=\"text\" className=\"form-control\" placeholder=\"Website\"/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n    \r\n                                        name=\"location\"\r\n                                        value={profile.location}\r\n                                        onChange={updateInput}\r\n                                        type=\"text\" className=\"form-control\" placeholder=\"Location\"/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select\r\n                                        \r\n                                        name=\"designation\"\r\n                                        value={profile.designation}\r\n                                        onChange={updateInput}\r\n                                        className=\"form-control\">\r\n                                        <option value=\"\">Select Designation</option>\r\n                                        <option value=\"Junior Developer\">Junior Developer</option>\r\n                                        <option value=\"Senior Developer\">Senior Developer</option>\r\n                                        <option value=\"Tech Lead\">Tech Lead</option>\r\n                                        <option value=\"Junior Manager\">Junior Manager</option>\r\n                                        <option value=\"Senior Manager\">Senior Manager</option>\r\n                                        <option value=\"Director\">Director</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        \r\n                                        name=\"skills\"\r\n                                        value={profile.skills}\r\n                                        onChange={updateInput}\r\n                                        type=\"text\" className=\"form-control\" placeholder=\"Skills\"/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                                <textarea\r\n                                                    \r\n                                                    name=\"bio\"\r\n                                                    value={profile.bio}\r\n                                                    onChange={updateInput}\r\n                                                    rows=\"3\" className=\"form-control\" placeholder=\"Job Description\"/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        \r\n                                        name=\"githubUserName\"\r\n                                        value={profile.githubUserName}\r\n                                        onChange={updateInput}\r\n                                        type=\"text\" className=\"form-control\" placeholder=\"Github link (start with https://)\"/>\r\n                                </div>\r\n                                <hr/>\r\n                                <small>Social Links</small>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        \r\n                                        name=\"youtube\"\r\n                                        value={profile.youtube}\r\n                                        onChange={updateInput}\r\n                                        type=\"text\" className=\"form-control\" placeholder=\"YouTube link (start with https://)\"/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        \r\n                                        name=\"twitter\"\r\n                                        value={profile.twitter}\r\n                                        onChange={updateInput}\r\n                                        type=\"text\" className=\"form-control\" placeholder=\"Twitter link (start with https://)\"/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        \r\n                                        name=\"facebook\"\r\n                                        value={profile.facebook}\r\n                                        onChange={updateInput}\r\n                                        type=\"text\" className=\"form-control\" placeholder=\"Facebook link (start with https://)\"/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        \r\n                                        name=\"linkedin\"\r\n                                        value={profile.linkedin}\r\n                                        onChange={updateInput}\r\n                                        type=\"text\" className=\"form-control\" placeholder=\"LinkedIn link (start with https://)\"/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        \r\n                                        name=\"instagram\"\r\n                                        value={profile.instagram}\r\n                                        onChange={updateInput}\r\n                                        type=\"text\" className=\"form-control\" placeholder=\"Instagram link (start with https://)\"/>\r\n                                </div>\r\n                                <div>\r\n                                    <input type=\"submit\" className=\"btn btn-teal btn-sm\" value=\"Create Profile\"/>\r\n                                    <Link to=\"/profiles/dashboard\" className=\"btn bg-light-grey btn-sm\">Back</Link>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default CreateProfile;\r\n","F:\\react-social-app\\client\\src\\modules\\profiles\\add-education\\AddEducation.js",[],"F:\\react-social-app\\client\\src\\util\\userUtil.js",[],"F:\\react-social-app\\client\\src\\util\\authUtil.js",[],"F:\\react-social-app\\client\\src\\redux\\users\\user.reducer.js",[],"F:\\react-social-app\\client\\src\\redux\\alerts\\alert.reducer.js",[],"F:\\react-social-app\\client\\src\\redux\\profiles\\profile.reducer.js",[],"F:\\react-social-app\\client\\src\\redux\\alerts\\alert.actions.js",[],"F:\\react-social-app\\client\\src\\redux\\profiles\\profile.actions.js",[],"F:\\react-social-app\\client\\src\\redux\\developers\\developer.reducer.js",[],"F:\\react-social-app\\client\\src\\redux\\posts\\post.reducer.js",[],"F:\\react-social-app\\client\\src\\redux\\developers\\developer.actions.js",[],"F:\\react-social-app\\client\\src\\redux\\posts\\post.actions.js",["176"],"import Axios from 'axios';\r\nimport axios from \"axios\";\r\nimport * as alertActions from '../alerts/alert.actions';\r\n\r\nimport * as userUtil from \"../../util/userUtil\";\r\nimport * as authUtil from \"../../util/authUtil\";\r\n\r\nexport const GET_ALL_POSTS_REQUEST = 'GET_ALL_POSTS_REQUEST';\r\nexport const GET_ALL_POSTS_SUCCESS = 'GET_ALL_POSTS_SUCCESS';\r\nexport const GET_ALL_POSTS_FAILURE = 'GET_ALL_POSTS_FAILURE';\r\n\r\nexport const CREATE_POST_REQUEST = 'CREATE_POST_REQUEST';\r\nexport const CREATE_POST_SUCCESS = 'CREATE_POST_SUCCESS';\r\nexport const CREATE_POST_FAILURE = 'CREATE_POST_FAILURE';\r\n\r\nexport const GET_POST_REQUEST = 'GET_POST_REQUEST';\r\nexport const GET_POST_SUCCESS = 'GET_POST_SUCCESS';\r\nexport const GET_POST_FAILURE = 'GET_POST_FAILURE';\r\n\r\nexport const DELETE_POST_REQUEST = 'DELETE_POST_REQUEST';\r\nexport const DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\r\nexport const DELETE_POST_FAILURE = 'DELETE_POST_FAILURE';\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const CREATE_COMMENT_REQUEST = 'CREATE_COMMENT_REQUEST';\r\nexport const CREATE_COMMENT_SUCCESS = 'CREATE_COMMENT_SUCCESS';\r\nexport const CREATE_COMMENT_FAILURE = 'CREATE_COMMENT_FAILURE';\r\n\r\nexport const DELETE_COMMENT_REQUEST = 'DELETE_COMMENT_REQUEST';\r\nexport const DELETE_COMMENT_SUCCESS = 'DELETE_COMMENT_SUCCESS';\r\nexport const DELETE_COMMENT_FAILURE = 'DELETE_COMMENT_FAILURE';\r\n\r\nexport const getAllPosts = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            if(userUtil.isLoggedIn()) {\r\n                let token = userUtil.getToken();\r\n                authUtil.setAuthToken(token);\r\n                dispatch({type : GET_ALL_POSTS_REQUEST});\r\n                let dataUrl = `/api/posts/`;\r\n                let response = await Axios.get(dataUrl);\r\n                dispatch({type : GET_ALL_POSTS_SUCCESS, payload : response.data});\r\n               \r\n                \r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n            dispatch({type : GET_ALL_POSTS_FAILURE , payload : {error : error}});\r\n        }\r\n    };\r\n};\r\n\r\nexport const createPost = (post) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            if(userUtil.isLoggedIn()) {\r\n                let token = userUtil.getToken();\r\n                authUtil.setAuthToken(token);\r\n                dispatch({type : CREATE_POST_REQUEST});\r\n                let dataUrl = `/api/posts/`;\r\n                let response = await Axios.post(dataUrl, post);\r\n             \r\n                dispatch({type : CREATE_POST_SUCCESS, payload : response.data});\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n            dispatch({type : CREATE_POST_FAILURE , payload : {error : error}});\r\n        }\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const getPost = (postId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            if(userUtil.isLoggedIn()) {\r\n                let token = userUtil.getToken();\r\n                authUtil.setAuthToken(token);\r\n                dispatch({type : GET_POST_REQUEST});\r\n                let dataUrl = `/api/posts/${postId}`;\r\n                let response = await Axios.get(dataUrl);\r\n                dispatch({type : GET_POST_SUCCESS, payload : response.data});\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n            dispatch({type : GET_POST_FAILURE , payload : {error : error}});\r\n        }\r\n    };\r\n};\r\n\r\nexport const deletePost = (postId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            if(userUtil.isLoggedIn()) {\r\n                let token = userUtil.getToken();\r\n                authUtil.setAuthToken(token);\r\n                dispatch({type : DELETE_POST_REQUEST});\r\n                let dataUrl = `/api/posts/${postId}`;\r\n                let response = await Axios.delete(dataUrl);\r\n                dispatch({type : DELETE_POST_SUCCESS, payload : response.data});\r\n                dispatch(alertActions.setAlert('Post is Deleted' , 'success'));\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n            dispatch({type : DELETE_POST_FAILURE , payload : {error : error}});\r\n        }\r\n    };\r\n};\r\n\r\nexport const likePost = (postId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            if(userUtil.isLoggedIn()) {\r\n                let token = userUtil.getToken();\r\n                authUtil.setAuthToken(token);\r\n                dispatch({type : LIKE_POST_REQUEST});\r\n                let dataUrl = `/api/posts/like/${postId}`;\r\n                let response = await Axios.put(dataUrl, postId);\r\n                dispatch({type : LIKE_POST_SUCCESS, payload : response.data});\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n            dispatch({type : LIKE_POST_FAILURE , payload : {error : error}});\r\n        }\r\n    };\r\n};\r\n\r\nexport const unlikePost = (postId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            if(userUtil.isLoggedIn()) {\r\n                let token = userUtil.getToken();\r\n                authUtil.setAuthToken(token);\r\n                dispatch({type : UNLIKE_POST_REQUEST});\r\n                let dataUrl = `/api/posts/unlike/${postId}`;\r\n                let response = await Axios.put(dataUrl, postId);\r\n                dispatch({type : UNLIKE_POST_SUCCESS, payload : response.data});\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n            dispatch({type : UNLIKE_POST_FAILURE , payload : {error : error}});\r\n        }\r\n    };\r\n};\r\n\r\nexport const createComment = (comment, postId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            if(userUtil.isLoggedIn()) {\r\n                let token = userUtil.getToken();\r\n                authUtil.setAuthToken(token);\r\n                dispatch({type : CREATE_COMMENT_REQUEST});\r\n                let dataUrl = `/api/posts/comment/${postId}`;\r\n                let response = await Axios.post(dataUrl, comment);\r\n                dispatch({type : CREATE_COMMENT_SUCCESS, payload : response.data});\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n            dispatch({type : CREATE_COMMENT_FAILURE , payload : {error : error}});\r\n        }\r\n    };\r\n};\r\n\r\nexport const deleteComment = (postId, commentId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            if(userUtil.isLoggedIn()) {\r\n                let token = userUtil.getToken();\r\n                authUtil.setAuthToken(token);\r\n                dispatch({type : DELETE_COMMENT_REQUEST});\r\n                let dataUrl = `/api/posts/comment/${postId}/${commentId}`;\r\n                let response = await Axios.delete(dataUrl);\r\n                dispatch({type : DELETE_COMMENT_SUCCESS, payload : response.data});\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n            dispatch({type : DELETE_COMMENT_FAILURE , payload : {error : error}});\r\n        }\r\n    };\r\n};\r\n","F:\\react-social-app\\client\\src\\layout\\misc\\spinner\\Spinner.js",[],["177","178"],"F:\\react-social-app\\client\\src\\layout\\misc\\Error\\Error.js",[],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":27,"column":8,"nodeType":"185","endLine":27,"endColumn":10,"suggestions":"186"},{"ruleId":"183","severity":1,"message":"184","line":21,"column":8,"nodeType":"185","endLine":21,"endColumn":10,"suggestions":"187"},{"ruleId":"188","severity":1,"message":"189","line":2,"column":21,"nodeType":"190","messageId":"191","endLine":2,"endColumn":31},{"ruleId":"188","severity":1,"message":"192","line":2,"column":33,"nodeType":"190","messageId":"191","endLine":2,"endColumn":37},{"ruleId":"188","severity":1,"message":"193","line":22,"column":12,"nodeType":"190","messageId":"191","endLine":22,"endColumn":28},{"ruleId":"183","severity":1,"message":"184","line":33,"column":6,"nodeType":"185","endLine":33,"endColumn":19,"suggestions":"194"},{"ruleId":"195","severity":1,"message":"196","line":170,"column":49,"nodeType":"197","messageId":"198","endLine":170,"endColumn":51},{"ruleId":"195","severity":1,"message":"196","line":211,"column":49,"nodeType":"197","messageId":"198","endLine":211,"endColumn":51},{"ruleId":"195","severity":1,"message":"199","line":34,"column":70,"nodeType":"197","messageId":"198","endLine":34,"endColumn":72},{"ruleId":"195","severity":1,"message":"199","line":41,"column":37,"nodeType":"197","messageId":"198","endLine":41,"endColumn":39},{"ruleId":"183","severity":1,"message":"200","line":83,"column":8,"nodeType":"185","endLine":83,"endColumn":10,"suggestions":"201"},{"ruleId":"202","severity":1,"message":"203","line":125,"column":19,"nodeType":"204","endLine":128,"endColumn":39},{"ruleId":"183","severity":1,"message":"184","line":24,"column":8,"nodeType":"185","endLine":24,"endColumn":10,"suggestions":"205"},{"ruleId":"195","severity":1,"message":"196","line":109,"column":76,"nodeType":"197","messageId":"198","endLine":109,"endColumn":78},{"ruleId":"195","severity":1,"message":"196","line":159,"column":76,"nodeType":"197","messageId":"198","endLine":159,"endColumn":78},{"ruleId":"195","severity":1,"message":"199","line":31,"column":37,"nodeType":"197","messageId":"198","endLine":31,"endColumn":39},{"ruleId":"183","severity":1,"message":"184","line":69,"column":8,"nodeType":"185","endLine":69,"endColumn":16,"suggestions":"206"},{"ruleId":"188","severity":1,"message":"207","line":5,"column":13,"nodeType":"190","messageId":"191","endLine":5,"endColumn":23},{"ruleId":"188","severity":1,"message":"208","line":9,"column":10,"nodeType":"190","messageId":"191","endLine":9,"endColumn":14},{"ruleId":"183","severity":1,"message":"184","line":73,"column":8,"nodeType":"185","endLine":73,"endColumn":10,"suggestions":"209"},{"ruleId":"188","severity":1,"message":"210","line":103,"column":9,"nodeType":"190","messageId":"191","endLine":103,"endColumn":24},{"ruleId":"188","severity":1,"message":"211","line":32,"column":10,"nodeType":"190","messageId":"191","endLine":32,"endColumn":14},{"ruleId":"202","severity":1,"message":"203","line":93,"column":19,"nodeType":"204","endLine":96,"endColumn":39},{"ruleId":"188","severity":1,"message":"212","line":2,"column":8,"nodeType":"190","messageId":"191","endLine":2,"endColumn":13},{"ruleId":"179","replacedBy":"213"},{"ruleId":"181","replacedBy":"214"},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["217"],["218"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'createDynamicURL' is defined but never used.",["219"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'dispatch', 'profile', and 'user.avatar'. Either include them or remove the dependency array.",["220"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["221"],["222"],"'userAction' is defined but never used.","'text' is defined but never used.",["223"],"'clickUnLikePost' is assigned a value but never used.","'user' is assigned a value but never used.","'axios' is defined but never used.",["215"],["216"],"no-global-assign","no-unsafe-negation",{"desc":"224","fix":"225"},{"desc":"224","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"224","fix":"231"},{"desc":"232","fix":"233"},{"desc":"224","fix":"234"},"Update the dependencies array to be: [dispatch]",{"range":"235","text":"236"},{"range":"237","text":"236"},"Update the dependencies array to be: [developerId, dispatch]",{"range":"238","text":"239"},"Update the dependencies array to be: [dispatch, profile, user.avatar]",{"range":"240","text":"241"},{"range":"242","text":"236"},"Update the dependencies array to be: [dispatch, postId]",{"range":"243","text":"244"},{"range":"245","text":"236"},[1377,1379],"[dispatch]",[716,718],[939,952],"[developerId, dispatch]",[2813,2815],"[dispatch, profile, user.avatar]",[827,829],[1960,1968],"[dispatch, postId]",[2037,2039]]